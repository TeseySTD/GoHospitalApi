# Tokens
@admin_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6ImFkbWluIiwiZXhwIjoxNzYwODE1NzEwLCJpYXQiOjE3NjA3MjkzMTB9.XCwXhHsTWeQU9ZGjEq-lkQAfaWf8Reeu2N71S9wVGdM
@reader_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJlYWRlciIsInJvbGUiOiJyZWFkZXIiLCJleHAiOjE3NjA4MTU0MjgsImlhdCI6MTc2MDcyOTAyOH0.zl__MvF9nwrQtoy9J_44GqtAuVGop3zaSLjz7oEsiVI


### Get API info (без аутентифікації)
GET http://localhost:8080/

### Get list of available users (без аутентифікації)
GET http://localhost:8080/users

###############################################
# AUTHENTICATION (Аутентифікація)
###############################################

### Login as ADMIN (full access)
POST http://localhost:8080/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

### Login as READER (read-only)
POST http://localhost:8080/login
Content-Type: application/json

{
  "username": "reader",
  "password": "reader123"
}

### Login as DOCTOR (full access)
POST http://localhost:8080/login
Content-Type: application/json

{
  "username": "doctor",
  "password": "doctor123"
}

### Login as VIEWER (read-only)
POST http://localhost:8080/login
Content-Type: application/json

{
  "username": "viewer",
  "password": "viewer123"
}

### Test invalid login
POST http://localhost:8080/login
Content-Type: application/json

{
  "username": "invalid",
  "password": "wrong"
}

###############################################
# PATIENTS - ADMIN ACCESS
###############################################

### Get all patients (ADMIN)
GET http://localhost:8080/patients
Authorization: Bearer {{admin_token}}

### Get patient by ID (ADMIN)
GET http://localhost:8080/patients/1
Authorization: Bearer {{admin_token}}

### Get patients with filter (ADMIN)
GET http://localhost:8080/patients?first_name=Ivan
Authorization: Bearer {{admin_token}}

### Create new patient (ADMIN only)
POST http://localhost:8080/patients
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "first_name": "Ivan",
  "last_name": "Petrinko",
  "age": 35,
  "diagnosis": "Flu"
}

### Update patient (ADMIN only)
PUT http://localhost:8080/patients/1
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "first_name": "Ivan",
  "last_name": "Petrinko",
  "age": 36,
  "diagnosis": "Recovered"
}

### Delete patient (ADMIN only)
DELETE http://localhost:8080/patients/1
Authorization: Bearer {{admin_token}}

###############################################
# PATIENTS - READER ACCESS
###############################################

### Get all patients (READER - allowed)
GET http://localhost:8080/patients
Authorization: Bearer {{reader_token}}

### Get patient by ID (READER - allowed)
GET http://localhost:8080/patients/1
Authorization: Bearer {{reader_token}}

### Try to create patient (READER - FORBIDDEN)
POST http://localhost:8080/patients
Content-Type: application/json
Authorization: Bearer {{reader_token}}

{
  "first_name": "Test",
  "last_name": "User",
  "age": 30,
  "diagnosis": "Test"
}

### Try to update patient (READER - FORBIDDEN)
PUT http://localhost:8080/patients/1
Content-Type: application/json
Authorization: Bearer {{reader_token}}

{
  "first_name": "Test",
  "last_name": "Update",
  "age": 31,
  "diagnosis": "Test"
}

### Try to delete patient (READER - FORBIDDEN)
DELETE http://localhost:8080/patients/1
Authorization: Bearer {{reader_token}}

###############################################
# DOCTORS - ADMIN ACCESS
###############################################

### Get all doctors (ADMIN)
GET http://localhost:8080/doctors
Authorization: Bearer {{admin_token}}

### Get doctor by ID (ADMIN)
GET http://localhost:8080/doctors/1
Authorization: Bearer {{admin_token}}

### Get doctors with filter (ADMIN)
GET http://localhost:8080/doctors?specialization=cardiologist
Authorization: Bearer {{admin_token}}

### Create new doctor (ADMIN only)
POST http://localhost:8080/doctors
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "first_name": "Olena",
  "last_name": "Kovalenko",
  "specialization": "Cardiologist",
  "experience": 10
}

### Update doctor (ADMIN only)
PUT http://localhost:8080/doctors/1
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "first_name": "Olena",
  "last_name": "Kovalenko",
  "specialization": "Cardiologist",
  "experience": 11
}

### Delete doctor (ADMIN only)
DELETE http://localhost:8080/doctors/1
Authorization: Bearer {{admin_token}}

###############################################
# DOCTORS - READER ACCESS
###############################################

### Get all doctors (READER - allowed)
GET http://localhost:8080/doctors
Authorization: Bearer {{reader_token}}

### Try to create doctor (READER - FORBIDDEN)
POST http://localhost:8080/doctors
Content-Type: application/json
Authorization: Bearer {{reader_token}}

{
  "first_name": "Test",
  "last_name": "Doctor",
  "specialization": "Test",
  "experience": 5
}

###############################################
# APPOINTMENTS - ADMIN ACCESS
###############################################

### Get all appointments (ADMIN)
GET http://localhost:8080/appointments
Authorization: Bearer {{admin_token}}

### Get appointment by ID (ADMIN)
GET http://localhost:8080/appointments/1
Authorization: Bearer {{admin_token}}

### Get appointments with filter (ADMIN)
GET http://localhost:8080/appointments?status=Scheduled
Authorization: Bearer {{admin_token}}

### Create new appointment (ADMIN only)
POST http://localhost:8080/appointments
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "patient_id": 1,
  "doctor_id": 1,
  "date": "2025-10-20",
  "time": "10:00",
  "status": "Scheduled"
}

### Update appointment (ADMIN only)
PUT http://localhost:8080/appointments/1
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "patient_id": 1,
  "doctor_id": 1,
  "date": "2025-10-20",
  "time": "10:00",
  "status": "Completed"
}

### Delete appointment (ADMIN only)
DELETE http://localhost:8080/appointments/1
Authorization: Bearer {{admin_token}}

###############################################
# APPOINTMENTS - READER ACCESS
###############################################

### Get all appointments (READER - allowed)
GET http://localhost:8080/appointments
Authorization: Bearer {{reader_token}}

### Try to create appointment (READER - FORBIDDEN)
POST http://localhost:8080/appointments
Content-Type: application/json
Authorization: Bearer {{reader_token}}

{
  "patient_id": 1,
  "doctor_id": 1,
  "date": "2025-10-21",
  "time": "11:00",
  "status": "Scheduled"
}

###############################################
# ERROR CASES 
###############################################

### Request without token
GET http://localhost:8080/patients

### Request with invalid token
GET http://localhost:8080/patients
Authorization: Bearer invalid_token_here

### Request with expired/malformed token
GET http://localhost:8080/patients
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.invalid.signature
